package Glot.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class Reference_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(" ");
    tgs.append(SEnumOperations.getMemberName0(SPropertyOperations.getEnum(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.foreignKey$WIPu), LINKS.features$U1Wq)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Attribute$tV) && SPropertyOperations.getBoolean(SNodeOperations.cast(it, CONCEPTS.Attribute$tV), PROPS.isPrimaryKey$8T7e);
      }
    }).first(), CONCEPTS.Attribute$tV), PROPS.type$U2Su)));

  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty isPrimaryKey$8T7e = MetaAdapterFactory.getProperty(0x28e4957b85994380L, 0x9a2de36d611c13b9L, 0x1f05a1bb5d897c30L, 0x6c21e3da475f0862L, "isPrimaryKey");
    /*package*/ static final SProperty type$U2Su = MetaAdapterFactory.getProperty(0x28e4957b85994380L, 0x9a2de36d611c13b9L, 0x1f05a1bb5d897c30L, 0x1f05a1bb5d897c31L, "type");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink foreignKey$WIPu = MetaAdapterFactory.getReferenceLink(0x28e4957b85994380L, 0x9a2de36d611c13b9L, 0x1f05a1bb5d897c41L, 0x1f05a1bb5d897c42L, "foreignKey");
    /*package*/ static final SContainmentLink features$U1Wq = MetaAdapterFactory.getContainmentLink(0x28e4957b85994380L, 0x9a2de36d611c13b9L, 0x1f05a1bb5d897c26L, 0x1f05a1bb5d897c2eL, "features");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Attribute$tV = MetaAdapterFactory.getConcept(0x28e4957b85994380L, 0x9a2de36d611c13b9L, 0x1f05a1bb5d897c30L, "Glot.structure.Attribute");
  }
}
